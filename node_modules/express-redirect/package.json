{
  "name": "express-redirect",
  "description": "Flexible redirection plugin",
  "version": "1.1.1",
  "author": {
    "name": "Jan Buschtöns",
    "email": "buschtoens@gmail.com"
  },
  "contributors": [
    {
      "name": "Jan Buschtöns",
      "email": "buschtoens@gmail.com",
      "url": "https://github.com/silvinci"
    }
  ],
  "license": "MIT",
  "keywords": [
    "express",
    "express-plugin",
    "connect",
    "redirect",
    "redirection",
    "rewrite",
    "middleware",
    "plugin"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/silvinci/express-redirect"
  },
  "main": "index",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "prepublish": "npm prune",
    "test": "mocha -R spec -r should"
  },
  "dependencies": {
    "sanitize-arguments": "~2.0"
  },
  "devDependencies": {
    "mocha": "~1.7.3",
    "should": "~1.2.1",
    "express": "~3"
  },
  "readme": "# express-redirect [![Build Status](https://img.shields.io/travis/phvcky/express-redirect.svg?branch=master)](https://travis-ci.org/phvcky/express-redirect) [![NPM Version](https://img.shields.io/npm/v/express-redirect.svg)](https://www.npmjs.org/package/express-redirect)\r\n**express-redirect** offers you simple and blazing fast redirection rules.\r\nEven very complex redirect rules don't take longer than 1 ms.\r\nIt just comes down to concatenating strings.\r\n\r\nSay goodbye to writing 10 lines of code for a plain redirection over and over again.\r\n\r\nIf you want redirections with fancy JS expressions, you should probably check out [deviate](https://github.com/ForbesLindesay/deviate).\r\n\r\n## Installation\r\n```\r\n$ npm install express-redirect\r\n```\r\n\r\n```javascript\r\nvar express = require(\"express\")\r\n  , redirect = require(\"express-redirect\");\r\n\r\nvar app = express();\r\nredirect(app); // mount the plugin\r\n```\r\n\r\n## Example\r\n\r\n```javascript\r\n// just a smple redirect\r\napp.redirect(\"/p/:id\", \"/page/:id\");\r\n\r\n// you want it permanent?\r\napp.redirect(\"/p/:id\", \"/page/:id\", 301);\r\n\r\n// no id, goto page # 1\r\napp.redirect(\"/p/:id?\", \"/page/:id(1)\");\r\n\r\n// only redirect POST (for whatever reason)\r\napp.redirect(\"/contact\", \"/thanks\", \"post\")\r\n\r\n// a bit more complex\r\napp.redirect(\r\n  \"/entry/:entry/comments/:action(view|edit|delete)?/:id([0-9]+)/:reply([0-9]+)?\",\r\n  \"/entry/:entry/comments/:action(view)/:id/:reply?\"\r\n);\r\n\r\n// external redirects work too\r\napp.redirect(\r\n  \"/google/:query?\",\r\n  \"https://www.google.de/?q=:query(Nyan+Cat)\"\r\n);\r\n```\r\n\r\n## API\r\nexpress-redirect mounts the new method `app.redirect(route, target, [status], [method])` to your app.\r\nYou can access it just like `app.get()` or `app.post()` etc.\r\n\r\n### route\r\nThe parameter `route` is a string and is required.\r\nIt can contain parameters like `:id`, `:year([0-9]{4})?` or `:action(view|edit)`.\r\nIt's basically just the same as a route you would pass to `app.get()`.\r\n\r\n### target\r\nThe parameter `target` is a string and is required.\r\nIt can contain parameters like `:id`, `:year?` or `:action(view)`,\r\nwhere a `?` marks an optional parameter and `(someString)` is a default value.  \r\nThe parameters get replaced by their respective counterparts in the `route`.\r\n\r\n```javascript\r\napp.redirect(\"/a/:id([0-9]+)?\", \"/b/:id(1)\");\r\napp.redirect(\"/c/:action(view|delete)?\", \"/d/:action?\");\r\n```\r\n```\r\n/a           -> /b/1\r\n/a/100       -> /b/100\r\n/c           -> /d\r\n/c/view      -> /d/view\r\n```\r\n\r\n### status\r\nThe parameter `status` is an integer and is optional.\r\nIt is a [HTTP (redirection) status code](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#3xx_Redirection).\r\nIt defaults to [`307` (Temporary Redirect)](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#307).\r\n\r\n### method\r\nThe parameter `method` is a string and is optional.\r\nIt is a [VERB](http://expressjs.com/api.html#app.VERB) as in express' router.\r\nIt defaults to `all`.\r\n\r\n\r\n## License \r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 20012-2013 Jan Buschtöns &lt;buschtoens@gmail.com&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/silvinci/express-redirect/issues"
  },
  "homepage": "https://github.com/silvinci/express-redirect",
  "_id": "express-redirect@1.1.1",
  "_shasum": "13d216e3581119380f2f7934ff2671196cb9a41b",
  "_from": "express-redirect@",
  "_resolved": "https://registry.npmjs.org/express-redirect/-/express-redirect-1.1.1.tgz"
}
